{"ast":null,"code":"import _slicedToArray from \"/Users/zhaojiangshan/Desktop/JSExercise/JSExercise/hooks-examples/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zhaojiangshan/Desktop/JSExercise/JSExercise/hooks-examples/src/Callback.js\";\nimport React, { useState, useEffect, useCallback, memo } from \"react\";\nvar ExpensiveComputationComponent = memo(function (_ref) {\n  var compute = _ref.compute,\n      count = _ref.count;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"computed: \", compute(count)), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"last re-render \", new Date().toLocaleTimeString()));\n});\n\nvar CallbackComponent = function CallbackComponent() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  useEffect(function () {\n    var timer = setTimeout(setTime(new Date()), 1000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  });\n\n  var fibonacci = function fibonacci(n) {\n    if (n <= 1) {\n      return 1;\n    }\n\n    return fibonacci(n - 1) + fibonacci(n - 2);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"useCallback Example \", time.toLocaleTimeString()), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"current count: \", count), React.createElement(ExpensiveComputationComponent, {\n    compute: useCallback(fibonacci, []),\n    count: count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default CallbackComponent;","map":{"version":3,"sources":["/Users/zhaojiangshan/Desktop/JSExercise/JSExercise/hooks-examples/src/Callback.js"],"names":["React","useState","useEffect","useCallback","memo","ExpensiveComputationComponent","compute","count","Date","toLocaleTimeString","CallbackComponent","time","setTime","setCount","timer","setTimeout","clearTimeout","fibonacci","n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,IAAlD,QAA8D,OAA9D;AAEA,IAAMC,6BAA6B,GAAGD,IAAI,CAAC,gBAAwB;AAAA,MAArBE,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACjE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeD,OAAO,CAACC,KAAD,CAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoB,IAAIC,IAAJ,GAAWC,kBAAX,EAApB,CAFF,CADF;AAMD,CAPyC,CAA1C;;AASA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA,kBACNT,QAAQ,CAAC,IAAIO,IAAJ,EAAD,CADF;AAAA;AAAA,MACvBG,IADuB;AAAA,MACjBC,OADiB;;AAAA,mBAEJX,QAAQ,CAAC,CAAD,CAFJ;AAAA;AAAA,MAEvBM,KAFuB;AAAA,MAEhBM,QAFgB;;AAG9BX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,KAAK,GAAGC,UAAU,CAACH,OAAO,CAAC,IAAIJ,IAAJ,EAAD,CAAR,EAAsB,IAAtB,CAAxB;AACA,WAAO;AAAA,aAAMQ,YAAY,CAACF,KAAD,CAAlB;AAAA,KAAP;AACD,GAHQ,CAAT;;AAKA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAC,CAAC,EAAI;AACrB,QAAIA,CAAC,IAAI,CAAT,EAAY;AACV,aAAO,CAAP;AACD;;AAED,WAAOD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT,GAAmBD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAnC;AACD,GAND;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAyBP,IAAI,CAACF,kBAAL,EAAzB,CADF,EAEE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMI,QAAQ,CAACN,KAAK,GAAG,CAAT,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkBA,KADlB,CAFF,EAKE,oBAAC,6BAAD;AACE,IAAA,OAAO,EAAEJ,WAAW,CAACc,SAAD,EAAY,EAAZ,CADtB;AAEE,IAAA,KAAK,EAAEV,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAYD,CA5BD;;AA8BA,eAAeG,iBAAf","sourcesContent":["import React, { useState, useEffect, useCallback, memo } from \"react\";\n\nconst ExpensiveComputationComponent = memo(({ compute, count }) => {\n  return (\n    <div>\n      <h1>computed: {compute(count)}</h1>\n      <h4>last re-render {new Date().toLocaleTimeString()}</h4>\n    </div>\n  );\n});\n\nconst CallbackComponent = () => {\n  const [time, setTime] = useState(new Date());\n  const [count, setCount] = useState(1);\n  useEffect(() => {\n    const timer = setTimeout(setTime(new Date()), 1000);\n    return () => clearTimeout(timer);\n  });\n\n  const fibonacci = n => {\n    if (n <= 1) {\n      return 1;\n    }\n\n    return fibonacci(n - 1) + fibonacci(n - 2);\n  };\n\n  return (\n    <div>\n      <h1>useCallback Example {time.toLocaleTimeString()}</h1>\n      <button onClick={() => setCount(count + 1)}>\n        current count: {count}\n      </button>\n      <ExpensiveComputationComponent\n        compute={useCallback(fibonacci, [])}\n        count={count}\n      />\n    </div>\n  );\n};\n\nexport default CallbackComponent;\n"]},"metadata":{},"sourceType":"module"}