{"ast":null,"code":"import _slicedToArray from \"/Users/zhaojiangshan/Desktop/JSExercise/JSExercise/hooks-examples/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zhaojiangshan/Desktop/JSExercise/JSExercise/hooks-examples/src/Memo.js\";\nimport React, { useState, useMemo } from \"react\";\n\nvar fibonacci = function fibonacci(n) {\n  if (n <= 1) {\n    return 1;\n  }\n\n  return fibonacci(n - 1) + fibonacci(n - 2);\n};\n\nvar MemoComponent = function MemoComponent() {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      num = _useState2[0],\n      setNum = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isGreen = _useState4[0],\n      setIsGreen = _useState4[1];\n\n  var fib = useMemo(function () {\n    return fibonacci(num);\n  }, [num]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    onClick: function onClick() {\n      return setIsGreen(!isGreen);\n    },\n    style: {\n      color: isGreen ? \"limegreen\" : \"crimson\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"useMemo Example\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Fibonacci of \", num, \" is \", fib), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setNum(num + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\u2795\"));\n};\n\nexport default MemoComponent;","map":{"version":3,"sources":["/Users/zhaojiangshan/Desktop/JSExercise/JSExercise/hooks-examples/src/Memo.js"],"names":["React","useState","useMemo","fibonacci","n","MemoComponent","num","setNum","isGreen","setIsGreen","fib","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,CAAC,EAAI;AACrB,MAAIA,CAAC,IAAI,CAAT,EAAY;AACV,WAAO,CAAP;AACD;;AAED,SAAOD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT,GAAmBD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAnC;AACD,CAND;;AAQA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACJJ,QAAQ,CAAC,CAAD,CADJ;AAAA;AAAA,MACnBK,GADmB;AAAA,MACdC,MADc;;AAAA,mBAEIN,QAAQ,CAAC,IAAD,CAFZ;AAAA;AAAA,MAEnBO,OAFmB;AAAA,MAEVC,UAFU;;AAG1B,MAAMC,GAAG,GAAGR,OAAO,CAAC;AAAA,WAAMC,SAAS,CAACG,GAAD,CAAf;AAAA,GAAD,EAAuB,CAACA,GAAD,CAAvB,CAAnB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMG,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,KADX;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAEH,OAAO,GAAG,WAAH,GAAiB;AAAjC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBF,GADhB,UACyBI,GADzB,CAPF,EAUE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,MAAM,CAACD,GAAG,GAAG,CAAP,CAAZ;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CADF;AAcD,CAnBD;;AAqBA,eAAeD,aAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\n\nconst fibonacci = n => {\n  if (n <= 1) {\n    return 1;\n  }\n\n  return fibonacci(n - 1) + fibonacci(n - 2);\n};\n\nconst MemoComponent = () => {\n  const [num, setNum] = useState(1);\n  const [isGreen, setIsGreen] = useState(true);\n  const fib = useMemo(() => fibonacci(num), [num]);\n\n  return (\n    <div>\n      <h1\n        onClick={() => setIsGreen(!isGreen)}\n        style={{ color: isGreen ? \"limegreen\" : \"crimson\" }}\n      >\n        useMemo Example\n      </h1>\n      <h2>\n        Fibonacci of {num} is {fib}\n      </h2>\n      <button onClick={() => setNum(num + 1)}>âž•</button>\n    </div>\n  );\n};\n\nexport default MemoComponent;\n"]},"metadata":{},"sourceType":"module"}