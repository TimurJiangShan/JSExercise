{"ast":null,"code":"import _slicedToArray from \"/Users/zhaojiangshan/Desktop/JSExercise/JSExercise/hooks-examples/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zhaojiangshan/Desktop/JSExercise/JSExercise/hooks-examples/src/Ref.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nvar RefComponent = function RefComponent() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateNumber = _useState2[0],\n      setStateNumber = _useState2[1];\n\n  var numRef = useRef(0);\n\n  function incrementAndDelayLogging() {\n    setStateNumber(stateNumber + 1);\n    numRef.current++;\n    setTimeout(function () {\n      return alert(\"state: \".concat(stateNumber, \" | ref: \").concat(numRef.current));\n    }, 1000);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"useRef Example\"), React.createElement(\"button\", {\n    onClick: incrementAndDelayLogging,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"delay logging\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"state: \", stateNumber), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"ref: \", numRef.current));\n};\n\nexport default RefComponent;","map":{"version":3,"sources":["/Users/zhaojiangshan/Desktop/JSExercise/JSExercise/hooks-examples/src/Ref.js"],"names":["React","useState","useEffect","useRef","RefComponent","stateNumber","setStateNumber","numRef","incrementAndDelayLogging","current","setTimeout","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACaH,QAAQ,CAAC,CAAD,CADrB;AAAA;AAAA,MAClBI,WADkB;AAAA,MACLC,cADK;;AAEzB,MAAMC,MAAM,GAAGJ,MAAM,CAAC,CAAD,CAArB;;AAEA,WAASK,wBAAT,GAAoC;AAClCF,IAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAE,IAAAA,MAAM,CAACE,OAAP;AACAC,IAAAA,UAAU,CACR;AAAA,aAAMC,KAAK,kBAAWN,WAAX,qBAAiCE,MAAM,CAACE,OAAxC,EAAX;AAAA,KADQ,EAER,IAFQ,CAAV;AAID;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAQ,IAAA,OAAO,EAAED,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYH,WAAZ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUE,MAAM,CAACE,OAAjB,CAJF,CADF;AAQD,CArBD;;AAuBA,eAAeL,YAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst RefComponent = () => {\n  const [stateNumber, setStateNumber] = useState(0);\n  const numRef = useRef(0);\n\n  function incrementAndDelayLogging() {\n    setStateNumber(stateNumber + 1);\n    numRef.current++;\n    setTimeout(\n      () => alert(`state: ${stateNumber} | ref: ${numRef.current}`),\n      1000\n    );\n  }\n\n  return (\n    <div>\n      <h1>useRef Example</h1>\n      <button onClick={incrementAndDelayLogging}>delay logging</button>\n      <h4>state: {stateNumber}</h4>\n      <h4>ref: {numRef.current}</h4>\n    </div>\n  );\n};\n\nexport default RefComponent;\n"]},"metadata":{},"sourceType":"module"}